{"version":3,"sources":["components/BookList.js","components/Home.js","services/bookAPIService.js","components/SelectedBook.js","components/PaymentInfo.js","components/Cart.js","components/MyOrderList.js","components/MyOrder.js","components/Navbar.js","App.js","serviceWorker.js","reducers/orderReducer.js","actions/sagaAction.js","index.js"],"names":["Booklist","bookdata","orderdata","price","saleInfo","listPrice","amount","bookObject","id","title","volumeInfo","description","image","imageLinks","thumbnail","className","key","slice","src","alt","onClick","e","Home","orderDispatch","useDispatch","useState","bookList","setBookList","orderHandle","bookObj","type","useEffect","a","axios","method","url","headers","kind","totalItems","then","response","data","books","items","map","item","SelectedBook","tableData","useSelector","state","order","index","PaymentInfo","itemPrice","reduce","accu","totalPrice","tax","toFixed","Cart","address","setAddress","addEdit","setAddEdit","onSubmit","preventDefault","name","rows","onChange","target","value","MyOrderList","removeBook","MyOrder","myOrder","removeBookHandle","removeFromCart","filter","Navbar","to","exact","path","component","App","Boolean","window","location","hostname","match","initOrder","orderReducer","action","cartAddData","cartRemoveBooks","addBooksSync","removeBooksSync","watchActions","put","error","call","takeLatest","SagaMidderware","createSagaMiddleware","Store","createStore","applyMiddleware","run","watchAction","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.62d6e0bf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Booklist({ bookdata, orderdata}) {\r\n  const price = bookdata.saleInfo ? bookdata.saleInfo.listPrice.amount : 0;\r\n\r\n  const bookObject = {\r\n    id: bookdata.id,\r\n    title: bookdata.volumeInfo.title,\r\n    description: bookdata.volumeInfo.description,\r\n    price: price,\r\n    image: bookdata.volumeInfo.imageLinks.thumbnail,\r\n  };\r\n\r\n  return (\r\n    <div className=\"box-book-list\">\r\n      <div key={bookdata.id} className=\"book-data-class\">\r\n        <h3>{bookObject.title}</h3>\r\n        <p>\r\n          {bookObject.description &&\r\n            bookObject.description.slice(0, 30) + \"...\"}\r\n        </p>\r\n        <div className=\"image-div-class\">\r\n          <img\r\n            className=\"image-class\"\r\n            src={bookObject.image}\r\n            alt=\"Girl in a jacket\"\r\n          ></img>\r\n          <div>\r\n            <h3>Price : {bookObject.price}</h3>\r\n            <button\r\n              onClick={(e) => orderdata(e, bookObject)}\r\n              className=\"button\"\r\n            >\r\n              Buy\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Booklist;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Booklist from \"./BookList\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchBooks } from \"../services/bookAPIService\";\r\n\r\nexport function Home() {\r\n  const orderDispatch = useDispatch();\r\n  const [bookList, setBookList] = useState([]);\r\n\r\n  function orderHandle(e, bookObj) {\r\n    orderDispatch({ type: \"ADD\", bookObj });\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const books = await fetchBooks();\r\n      setBookList(books);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {bookList.items &&\r\n        bookList.items.map((item) => (\r\n          <Booklist\r\n            bookdata={item}\r\n            orderdata={orderHandle}\r\n            key={item.id}\r\n           ></Booklist>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\n//fetch country data from \"rapidapi\"\r\nexport const fetchBooks = () => {\r\n  return axios({\r\n    method: \"GET\",\r\n    url:\r\n      \"https://google-books.p.rapidapi.com/volumes?filter=paid-ebooks&maxResults=20&fields=items(id,volumeInfo/description,volumeInfo/title,volumeInfo/imageLinks/thumbnail,saleInfo/listPrice/amount)\",\r\n    headers: {\r\n      \"x-rapidapi-host\": \"google-books.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"9d01bd09b6msh28ecc0191ae81cbp1afa12jsn8977574f94d8\",\r\n    },\r\n    kind: \"books#volumes\",\r\n    totalItems: 1,\r\n  }).then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction SelectedBook() {\r\n  const myOrder = useSelector((state) => state.order);\r\n\r\n  const tableData = myOrder.map((item, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{item.title}</td>\r\n        <td>{item.description.slice(0, 30) + \"...\"}</td>\r\n        <td>{item.price}</td>\r\n      </tr>\r\n    );\r\n  });\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Title</th>\r\n          <th>Description</th>\r\n          <th>Price</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{tableData}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default SelectedBook;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction PaymentInfo() {\r\n  const myOrder = useSelector((state) => state.order);\r\n  let itemPrice = myOrder.reduce((accu, item) => accu + item.price, 0);\r\n  let totalPrice = itemPrice ? itemPrice + 0.05 * itemPrice + 5.0 : 0;\r\n  let tax = itemPrice && 0.05 * itemPrice;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p> Item Price = $ {itemPrice}</p>\r\n        <p> Tax = $ {tax.toFixed(2)}</p>\r\n        <p> Shipping Charge = $ {itemPrice && 5.0}</p>\r\n        <p> Total = $ {totalPrice.toFixed(2)}</p>\r\n      </div>\r\n      <div>\r\n        <button className=\"button\">Checkout</button>\r\n        <button className=\"button\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentInfo;\r\n","import React, { useState } from \"react\";\r\nimport SelectedBook from \"./SelectedBook\";\r\nimport PaymentInfo from \"./PaymentInfo\";\r\n\r\nlet initAdd = `L2/1005, Hari Ganga Society\r\nOpp. New RTO, Yerwada\r\nPune - 411006`;\r\n\r\nfunction Cart() {\r\n  let [address, setAddress] = useState(initAdd);\r\n  let [addEdit, setAddEdit] = useState(false);\r\n\r\n  function saveAddressHandle(e) {\r\n    e.preventDefault();\r\n    setAddEdit(!addEdit);\r\n  }\r\n\r\n  function textChangeHandle(e) {\r\n    setAddress(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"box-cart-book-list\">\r\n        <form onSubmit={saveAddressHandle}>\r\n          <div className=\"shipping-add-class\">\r\n            <h3>Shipping Address</h3>\r\n            <div className=\"address-class\">Address</div>\r\n            {addEdit === false ? (\r\n              <p>{address}</p>\r\n            ) : (\r\n              <textarea\r\n                name=\"addText\"\r\n                id=\"descript\"\r\n                rows=\"8\"\r\n                onChange={textChangeHandle}\r\n                value={address}\r\n              />\r\n            )}\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" className=\"button\">\r\n              {addEdit === false ? \"Edit Address\" : \"Save Address\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"box-cart-book-list\">\r\n        <div className=\"shopping-bag-class\">\r\n          <h2>Shopping Bag</h2>\r\n          <div className=\"address-class\">List of Selected Item</div>\r\n          <SelectedBook></SelectedBook>\r\n        </div>\r\n      </div>\r\n      <div className=\"box-cart-payment-info\">\r\n        <div className=\"shipping-add-class\">\r\n          <h3>Payment Info</h3>\r\n          <PaymentInfo></PaymentInfo>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\n\r\nfunction MyOrderList({ bookdata, index, removeBook}) {\r\n\r\n   return (\r\n    <div>\r\n      <div key={bookdata.id} className=\"box-book-list\">\r\n        <div className=\"book-data-class\">\r\n          <h3>{bookdata.title}</h3>\r\n          <p>{bookdata.description && bookdata.description.slice(0, 30)+\"...\"}</p>\r\n          <div className=\"image-div-class\">\r\n            <img\r\n              className=\"image-class\"\r\n              src={bookdata.image}\r\n              alt=\"Girl in a jacket\"\r\n            ></img>\r\n            <div>\r\n              <h3>Price : {bookdata.price}</h3>\r\n              <button\r\n                onClick={() => removeBook(bookdata.id)}\r\n                 className=\"button\"\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyOrderList;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MyOrderList from \"./MyOrderList\";\r\n\r\nexport function MyOrder() {\r\n  const myOrder = useSelector((state) => state.order);\r\n  const orderDispatch = useDispatch();\r\n\r\n  function removeBookHandle(id) {\r\n    orderDispatch({ type: \"REMOVE\", id, myOrder});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {myOrder.map((item, index) => (\r\n        <MyOrderList\r\n          bookdata={item}\r\n          index={index}\r\n          removeBook={removeBookHandle}\r\n        ></MyOrderList>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function removeFromCart(id,myOrder) {\r\n  const filterData = myOrder.filter((item, index) => id !== item.id);\r\n  return filterData;\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\r\nimport {Home} from \"./Home\";\r\nimport Cart from \"./Cart\";\r\nimport {MyOrder} from \"./MyOrder\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <header>\r\n          <div>\r\n            <ul className=\"ul-style\">\r\n            <li className=\"li-style\"><div>Shopping Cart</div></li>\r\n            <li className=\"li-style\"><NavLink className=\"Link-style\" to=\"/home\" exact>Home   |</NavLink></li>\r\n            <li className=\"li-style\"><NavLink className=\"Link-style\" to=\"/myorder\" exact>My Order   |</NavLink></li>\r\n            <li className=\"li-style\"><NavLink className=\"Link-style\" to=\"/cart\" exact>Cart</NavLink></li>\r\n            </ul>\r\n          </div>\r\n        </header>\r\n        <div>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n        <Route path=\"/home\" exact component={Home}></Route>\r\n        <Route path=\"/myorder\" exact component={MyOrder}></Route>\r\n        <Route path=\"/cart\" exact component={Cart}></Route>\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  return (\n    <div>\n      <Navbar></Navbar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initOrder = {\r\n  order: [],\r\n};\r\n\r\nfunction orderReducer(state = initOrder, action) {\r\n  switch (action.type) {\r\n    case \"ADD_BOOK\":\r\n      return { order: [...state.order, action.cartAddData] };\r\n    case \"REMOVE_BOOK\":\r\n      return { order: action.cartRemoveBooks };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default orderReducer;\r\n","import {takeLatest,put,call} from 'redux-saga/effects'\r\nimport {removeFromCart} from '../components/MyOrder'\r\n\r\nfunction* addBooksSync(data){\r\n    try {\r\n        const cartAddData = data.bookObj\r\n        yield put({type: \"ADD_BOOK\",cartAddData})\r\n\r\n     } catch (error) {\r\n        yield put({type: \"FETCH_FAILED\", error})\r\n     }\r\n}\r\n\r\nfunction* removeBooksSync(data){\r\n    try {\r\n        const cartRemoveBooks = yield call(removeFromCart,data.id, data.myOrder)\r\n        yield put({type: \"REMOVE_BOOK\", cartRemoveBooks})\r\n\r\n     } catch (error) {\r\n        yield put({type: \"FETCH_FAILED\", error})\r\n     }\r\n}\r\n\r\nfunction* watchActions(){\r\n    yield takeLatest('ADD', addBooksSync)\r\n    yield takeLatest('REMOVE', removeBooksSync)\r\n}\r\n\r\nexport default watchActions","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux'\nimport  {Provider} from 'react-redux'\nimport orderReducer from './reducers/orderReducer'\nimport createSagaMiddleware from 'redux-saga'\nimport watchAction from './actions/sagaAction'\n\nconst SagaMidderware = createSagaMiddleware()\n\nconst Store = createStore(orderReducer,applyMiddleware(SagaMidderware))\n\nSagaMidderware.run(watchAction)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}